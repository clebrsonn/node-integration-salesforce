<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://cdn.socket.io/4.2.0/socket.io.js"></script>
  </head>
  <body>

    <table class="table table-striped" id="orders-table">
          <thead>
            <tr>
              <th scope="col">#</th>
              <th scope="col">Job Id</th>
              <th scope="col">Go To Mr</th>
              <th scope="col">Commented</th>
              <th scope="col">Status</th>
              <th scope="col">Errors</th>
              <th scope="col">Retry</th>
            </tr>
          </thead>
          <tbody>
            <% registries.forEach(function(registry) { %>
              <tr>
                <th scope="row"><%= registry.jobId %></th>
                <td><%= registry.jobId %></td>
                <td><a href="#"  onclick="goTo(this.id)" id="<%= registry.jobId %>"><%= registry.mrId %></a></td>
                <td><input type="checkbox" id="scales" name="scales" <%= (registry.commented ? "checked" : null) %>  disabled></td>
                <td><%= registry.status %></td>
                <td><%= registry.description %></td>
                <td><button value="<%= registry.jobId %>" onclick="retry(this.value)">Retry</button></td>


            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>


    <script>
        const socket = io();

        socket.on('connect', () => {
            socket.emit('connected');
        });

        socket.on('registry-update', () => {
          location.reload();
        })

        socket.on('disconnect', () => {
            console.error('Ops, something went wrong');
        });

        function goTo(e){
          let fetchData = {
            method: 'POST',
            body: JSON.stringify({jobId: e}),
            headers: new Headers({
              'Content-Type': 'application/json; charset=UTF-8'
            })
          }

          fetch('/goto', fetchData)
            .then((response) => {
              response.text().then(e =>
              window.open(e, '_blank'));
            })

        }

        function retry(e){
         let fetchData = {
          method: 'POST',
          body: JSON.stringify({jobId: e}),
          headers: new Headers({
            'Content-Type': 'application/json; charset=UTF-8'
          })
        }

         fetch('/retry', fetchData)
          .then((response) => {
            return response.json();
          })
      }


    </script>
  </body>
</html>
